---
// Simple theme toggle component
---

<button
  id="theme-toggle"
  type="button"
  class="inline-flex items-center justify-center p-2 text-gray-700 rounded-lg hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700 transition-colors border border-gray-200 dark:border-gray-600"
  aria-label="Toggle dark mode"
  title="Toggle dark/light mode"
>
  <!-- Sun Icon (Light Mode) -->
  <svg
    id="theme-toggle-light-icon"
    class="hidden w-5 h-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"
    ></path>
  </svg>
  <!-- Moon Icon (Dark Mode) -->
  <svg
    id="theme-toggle-dark-icon"
    class="hidden w-5 h-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
</button>

<script>
  function initThemeToggle() {
    const themeToggleLightIcon = document.querySelector('#theme-toggle-light-icon');
    const themeToggleDarkIcon = document.querySelector('#theme-toggle-dark-icon');
    const themeToggleBtn = document.querySelector('#theme-toggle');

    console.log('Theme toggle initialization:', {
      lightIcon: !!themeToggleLightIcon,
      darkIcon: !!themeToggleDarkIcon,
      button: !!themeToggleBtn
    });

    if (!themeToggleLightIcon || !themeToggleDarkIcon || !themeToggleBtn) {
      console.error('Theme toggle elements not found');
      return;
    }

    // Check if dark mode is enabled
    function isDarkMode() {
      return localStorage.getItem('color-theme') === 'dark' || 
             (!localStorage.getItem('color-theme') && window.matchMedia('(prefers-color-scheme: dark)').matches);
    }

    // Set theme icons visibility
    function setThemeIcons() {
      const darkMode = isDarkMode();
      console.log('Setting theme icons, dark mode:', darkMode);
      
      if (darkMode) {
        themeToggleLightIcon.classList.remove('hidden');
        themeToggleDarkIcon.classList.add('hidden');
        document.documentElement.classList.add('dark');
      } else {
        themeToggleLightIcon.classList.add('hidden');
        themeToggleDarkIcon.classList.remove('hidden');
        document.documentElement.classList.remove('dark');
      }
    }

    // Initialize theme
    setThemeIcons();

    // Add click event listener
    themeToggleBtn.addEventListener('click', function() {
      console.log('Theme toggle clicked');
      if (isDarkMode()) {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('color-theme', 'light');
        console.log('Switched to light mode');
      } else {
        document.documentElement.classList.add('dark');
        localStorage.setItem('color-theme', 'dark');
        console.log('Switched to dark mode');
      }
      setThemeIcons();
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  
  // Re-initialize on Astro page transitions
  document.addEventListener('astro:after-swap', initThemeToggle);
  
  // Initialize immediately if DOM is already loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initThemeToggle);
  } else {
    initThemeToggle();
  }
</script>
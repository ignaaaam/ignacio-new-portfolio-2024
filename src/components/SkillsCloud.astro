---
import translations from '../i18n/translations.json';
import PixelCard from './PixelCard/PixelCard.jsx';

interface Props {
  lang: 'en' | 'es';
}

const { lang } = Astro.props;
const t = translations[lang];

// Move the skill URL mapping to the frontmatter
function getSkillUrl(skill: string) {
  const skillMap = {
    // Backend
    "PHP": "https://www.php.net/",
    "Laravel": "https://laravel.com/",
    "MySQL": "https://www.mysql.com/",
    "API": "https://developer.mozilla.org/en-US/docs/Web/API",
    "PostgreSQL": "https://www.postgresql.org/",
    "Symfony": "https://symfony.com/",
    "CodeIgniter": "https://codeigniter.com/",
    "Node.js": "https://nodejs.org/",
    "Express": "https://expressjs.com/",
    "MongoDB": "https://www.mongodb.com/",
    
    // Frontend
    "JavaScript": "https://developer.mozilla.org/en-US/docs/Web/JavaScript",
    "Vue.js": "https://vuejs.org/",
    "React": "https://reactjs.org/",
    "Angular": "https://angular.io/",
    "CSS3": "https://developer.mozilla.org/en-US/docs/Web/CSS",
    "HTML5": "https://developer.mozilla.org/en-US/docs/Web/HTML",
    "TailwindCSS": "https://tailwindcss.com/",
    "Bootstrap": "https://getbootstrap.com/",
    "SASS": "https://sass-lang.com/",
    "jQuery": "https://jquery.com/",
    "TypeScript": "https://www.typescriptlang.org/",
    "Webpack": "https://webpack.js.org/",
    
    // DevOps
    "Git": "https://git-scm.com/",
    "GitHub": "https://github.com/",
    "Docker": "https://www.docker.com/",
    "CI/CD": "https://github.com/features/actions",
    "AWS": "https://aws.amazon.com/",
    "Linux": "https://www.linux.org/",
    "Nginx": "https://nginx.org/",
    "Apache": "https://httpd.apache.org/",
    "SSH": "https://www.ssh.com/",
    "Jenkins": "https://www.jenkins.io/",
    "Digital Ocean": "https://www.digitalocean.com/",
    "Kubernetes": "https://kubernetes.io/"
  };
  
  // Return the mapped URL or a fallback search URL
  return skillMap[skill] || `https://www.google.com/search?q=${encodeURIComponent(skill + " programming")}`;
}
---

<div class="mt-12 pt-16 relative">
  <!-- Visual separator at the top of the section -->
  <div class="absolute top-0 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-purple-500 to-transparent rounded-full opacity-60"></div>
  
  <h3 class="text-3xl font-bold mb-8 text-center bg-gradient-to-r from-purple-400 to-yellow-200 bg-clip-text text-transparent">
    {t.skillsTitle}
  </h3>
  
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    <!-- Backend Card -->
    <PixelCard client:load variant="backend" className="hover:border-purple-300/60">
      <h4 class="text-xl font-bold mb-4 flex items-center gap-2 text-purple-300">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M11 16h.01"></path>
        </svg>
        {t.backendTitle}
      </h4>
      <div class="flex flex-wrap gap-2">
        {t.backendSkills.map(skill => {
          const url = getSkillUrl(skill);
          return (
            <a 
              href={url} 
              target="_blank" 
              rel="noopener noreferrer"
              class="px-2.5 py-0.5 text-xs font-medium bg-purple-900/30 text-purple-200 rounded-md border border-purple-500/20 hover:bg-purple-800/50 hover:border-purple-400/40 hover:-translate-y-0.5 hover:text-white transition-all duration-200 shadow-sm shadow-purple-900/20 focus:outline-none focus:ring-2 focus:ring-purple-400/50 focus:ring-offset-1 focus:ring-offset-purple-900/30"
            >
              {skill}
            </a>
          );
        })}
      </div>
    </PixelCard>

    <!-- Frontend Card -->
    <PixelCard client:load variant="frontend" className="hover:border-blue-300/60">
      <h4 class="text-xl font-bold mb-4 flex items-center gap-2 text-blue-300">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
        </svg>
        {t.frontendTitle}
      </h4>
      <div class="flex flex-wrap gap-2">
        {t.frontendSkills.map(skill => {
          const url = getSkillUrl(skill);
          return (
            <a 
              href={url} 
              target="_blank" 
              rel="noopener noreferrer"
              class="px-2.5 py-0.5 text-xs font-medium bg-blue-900/30 text-blue-200 rounded-md border border-blue-500/20 hover:bg-blue-800/50 hover:border-blue-400/40 hover:-translate-y-0.5 hover:text-white transition-all duration-200 shadow-sm shadow-blue-900/20 focus:outline-none focus:ring-2 focus:ring-blue-400/50 focus:ring-offset-1 focus:ring-offset-blue-900/30"
            >
              {skill}
            </a>
          );
        })}
      </div>
    </PixelCard>

    <!-- DevOps Card -->
    <PixelCard client:load variant="devops" className="hover:border-green-300/60">
      <h4 class="text-xl font-bold mb-4 flex items-center gap-2 text-green-300">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
        </svg>
        {t.devopsTitle}
      </h4>
      <div class="flex flex-wrap gap-2">
        {t.devopsSkills.map(skill => {
          const url = getSkillUrl(skill);
          return (
            <a 
              href={url} 
              target="_blank" 
              rel="noopener noreferrer"
              class="px-2.5 py-0.5 text-xs font-medium bg-green-900/30 text-green-200 rounded-md border border-green-500/20 hover:bg-green-800/50 hover:border-green-400/40 hover:-translate-y-0.5 hover:text-white transition-all duration-200 shadow-sm shadow-green-900/20 focus:outline-none focus:ring-2 focus:ring-green-400/50 focus:ring-offset-1 focus:ring-offset-green-900/30"
            >
              {skill}
            </a>
          );
        })}
      </div>
    </PixelCard>
  </div>
</div> 